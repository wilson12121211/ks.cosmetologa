---
export interface Props {
  title: string;
  description: string;
  category: string;
  price?: number;
  duration?: string;
  benefits: string[];
  icon: string;
  image?: string;
  featured?: boolean;
  index?: number;
}

const {
  title,
  description,
  category,
  price,
  duration,
  benefits,
  icon,
  image,
  featured = false,
  index = 0
} = Astro.props;

const delayClass = `delay-${Math.min(index * 100, 500)}`;
---

<div 
  class={`group relative bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-500 overflow-hidden transform hover:-translate-y-2 ${featured ? 'ring-2 ring-pink-500 ring-opacity-50' : ''}`}
  x-data="{ expanded: false, hovered: false }"
  @mouseenter="hovered = true"
  @mouseleave="hovered = false"
  x-intersect.once="$el.classList.add('animate-fade-in-up')"
  style={`animation-delay: ${index * 150}ms`}
>
  <!-- Featured Badge -->
  {featured && (
    <div class="absolute top-4 right-4 z-10">
      <span class="bg-gradient-to-r from-pink-500 to-purple-600 text-white text-xs font-bold px-3 py-1 rounded-full shadow-lg">
        ‚≠ê Destacado
      </span>
    </div>
  )}
  
  <!-- Image Header -->
  {image && (
    <div class="relative h-48 overflow-hidden">
      <img 
        src={image} 
        alt={title}
        class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
        loading="lazy"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      
      <!-- Category Badge -->
      <div class="absolute top-4 left-4">
        <span class="bg-white/90 backdrop-blur-sm text-pink-600 text-sm font-semibold px-3 py-1 rounded-full">
          {category}
        </span>
      </div>
    </div>
  )}
  
  <!-- Content -->
  <div class="p-6">
    <!-- Icon & Title -->
    <div class="flex items-start gap-4 mb-4">
      <div class="flex-shrink-0">
        <div class="w-12 h-12 bg-gradient-to-br from-pink-100 to-purple-100 rounded-xl flex items-center justify-center text-2xl transform group-hover:scale-110 transition-transform duration-300">
          {icon}
        </div>
      </div>
      <div class="flex-1">
        <h3 class="text-xl font-bold text-gray-800 mb-2 group-hover:text-pink-600 transition-colors">
          {title}
        </h3>
        <p class="text-gray-600 text-sm leading-relaxed">
          {description}
        </p>
      </div>
    </div>
    
    <!-- Price & Duration -->
    {(price || duration) && (
      <div class="flex items-center gap-4 mb-4 text-sm">
        {price && (
          <div class="flex items-center gap-1 text-pink-600 font-semibold">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
            </svg>
            <span>RD${price.toLocaleString()}</span>
          </div>
        )}
        {duration && (
          <div class="flex items-center gap-1 text-gray-500">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span>{duration}</span>
          </div>
        )}
      </div>
    )}
    
    <!-- Benefits Toggle -->
    <div class="mb-4">
      <button 
        @click="expanded = !expanded"
        class="flex items-center gap-2 text-pink-600 hover:text-pink-700 font-medium text-sm transition-colors"
      >
        <span>Ver beneficios</span>
        <svg 
          class="w-4 h-4 transform transition-transform duration-200"
          :class="expanded ? 'rotate-180' : ''"
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
        </svg>
      </button>
      
      <!-- Benefits List -->
      <div 
        x-show="expanded"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0 transform -translate-y-2"
        x-transition:enter-end="opacity-100 transform translate-y-0"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="opacity-100 transform translate-y-0"
        x-transition:leave-end="opacity-0 transform -translate-y-2"
        class="mt-3 space-y-2"
      >
        {benefits.map((benefit) => (
          <div class="flex items-start gap-2 text-sm text-gray-600">
            <svg class="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
            </svg>
            <span>{benefit}</span>
          </div>
        ))}
      </div>
    </div>
    
    <!-- CTA Button -->
    <div class="pt-4 border-t border-gray-100">
      <button 
        class="w-full bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white font-semibold py-3 px-6 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 group"
        @click="window.open('https://app-para-citas-13ded.web.app/', '_blank')"
      >
        <span class="flex items-center justify-center gap-2">
          Reservar Ahora
          <svg class="w-4 h-4 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </span>
      </button>
    </div>
  </div>
  
  <!-- Hover Glow Effect -->
  <div 
    class="absolute inset-0 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none"
    style="background: linear-gradient(45deg, rgba(236, 72, 153, 0.1), rgba(147, 51, 234, 0.1)); filter: blur(1px);"
  ></div>
</div>

<style>
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }
</style>
