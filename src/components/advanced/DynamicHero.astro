---
export interface Props {
  title: string;
  subtitle?: string;
  ctaText?: string;
  ctaLink?: string;
  backgroundImage: string;
  overlayOpacity?: number;
  height?: 'sm' | 'md' | 'lg' | 'xl';
  textAlign?: 'left' | 'center' | 'right';
  animation?: boolean;
}

const {
  title,
  subtitle,
  ctaText,
  ctaLink,
  backgroundImage,
  overlayOpacity = 0.6,
  height = 'lg',
  textAlign = 'center',
  animation = true
} = Astro.props;

const heightClasses = {
  sm: 'h-[50vh]',
  md: 'h-[60vh]',
  lg: 'h-[80vh]',
  xl: 'h-screen'
};

const textAlignClasses = {
  left: 'text-left',
  center: 'text-center',
  right: 'text-right'
};
---

<section 
  class={`relative ${heightClasses[height]} flex items-center justify-center overflow-hidden`}
  x-data="{ loaded: false }"
  x-init="setTimeout(() => loaded = true, 100)"
>
  <!-- Background Image with Parallax -->
  <div 
    class="absolute inset-0 bg-cover bg-center bg-fixed transform scale-105"
    style={`background-image: url('${backgroundImage}'); will-change: transform;`}
    x-bind:class="loaded && 'animate-ken-burns'"
  ></div>
  
  <!-- Gradient Overlay -->
  <div 
    class="absolute inset-0 bg-gradient-to-br from-pink-900/60 via-purple-900/40 to-pink-600/60"
    style={`opacity: ${overlayOpacity}`}
  ></div>
  
  <!-- Animated Particles -->
  <div class="absolute inset-0 overflow-hidden pointer-events-none">
    <div class="absolute top-1/4 left-1/4 w-2 h-2 bg-white/20 rounded-full animate-float-slow"></div>
    <div class="absolute top-1/3 right-1/3 w-1 h-1 bg-pink-300/30 rounded-full animate-float-medium"></div>
    <div class="absolute bottom-1/4 left-1/3 w-3 h-3 bg-white/10 rounded-full animate-float-fast"></div>
  </div>
  
  <!-- Content -->
  <div 
    class={`relative z-10 max-w-6xl mx-auto px-6 ${textAlignClasses[textAlign]}`}
    x-show="loaded"
    x-transition:enter="transition ease-out duration-1000"
    x-transition:enter-start="opacity-0 transform translate-y-8"
    x-transition:enter-end="opacity-100 transform translate-y-0"
  >
    <h1 
      class="text-4xl md:text-6xl lg:text-7xl font-bold text-white mb-6 leading-tight"
      x-show="loaded"
      x-transition:enter="transition ease-out duration-1200 delay-300"
      x-transition:enter-start="opacity-0 transform translate-y-12"
      x-transition:enter-end="opacity-100 transform translate-y-0"
    >
      {title}
    </h1>
    
    {subtitle && (
      <p 
        class="text-xl md:text-2xl text-white/90 mb-8 max-w-3xl mx-auto leading-relaxed"
        x-show="loaded"
        x-transition:enter="transition ease-out duration-1200 delay-500"
        x-transition:enter-start="opacity-0 transform translate-y-8"
        x-transition:enter-end="opacity-100 transform translate-y-0"
      >
        {subtitle}
      </p>
    )}
    
    {ctaText && ctaLink && (
      <div
        x-show="loaded"
        x-transition:enter="transition ease-out duration-1200 delay-700"
        x-transition:enter-start="opacity-0 transform translate-y-8 scale-95"
        x-transition:enter-end="opacity-100 transform translate-y-0 scale-100"
      >
        <a 
          href={ctaLink}
          class="group inline-flex items-center gap-3 bg-gradient-to-r from-pink-500 to-pink-600 hover:from-pink-600 hover:to-pink-700 text-white font-semibold py-4 px-8 rounded-full shadow-2xl hover:shadow-pink-500/25 transition-all duration-300 transform hover:scale-105 hover:-translate-y-1"
          target={ctaLink.startsWith('http') ? '_blank' : '_self'}
        >
          <span>{ctaText}</span>
          <svg class="w-5 h-5 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      </div>
    )}
  </div>
  
  <!-- Scroll Indicator -->
  <div 
    class="absolute bottom-8 left-1/2 transform -translate-x-1/2 text-white/70 animate-bounce"
    x-show="loaded"
    x-transition:enter="transition ease-out duration-1000 delay-1000"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
  >
    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
    </svg>
  </div>
</section>

<style>
  @keyframes ken-burns {
    0% { transform: scale(1.05) rotate(0deg); }
    50% { transform: scale(1.1) rotate(0.5deg); }
    100% { transform: scale(1.05) rotate(0deg); }
  }
  
  @keyframes float-slow {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(180deg); }
  }
  
  @keyframes float-medium {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-15px) rotate(90deg); }
  }
  
  @keyframes float-fast {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-10px) rotate(270deg); }
  }
  
  .animate-ken-burns {
    animation: ken-burns 20s ease-in-out infinite;
  }
  
  .animate-float-slow {
    animation: float-slow 6s ease-in-out infinite;
  }
  
  .animate-float-medium {
    animation: float-medium 4s ease-in-out infinite;
  }
  
  .animate-float-fast {
    animation: float-fast 3s ease-in-out infinite;
  }
</style>
